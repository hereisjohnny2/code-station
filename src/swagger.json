{
  "openapi": "3.0.1",
  "info": {
    "version": "1.3.0",
    "title": "code_station",
    "description": "Code/Station App API Service",
    "contac": {
      "name": "Jo√£o Marcelo Carvalho",
      "email": "carvalho.joaomc@gmail.com",
      "url": "https://www.github.com/hereisjohnny2"
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3333/",
      "description": "Local server"
    },
    {
      "url": "https://api_url_production",
      "description": "Production server"
    }
  ],
  "tags" : [
    {
      "name": "User and Authentication Operations"
    }, 
    {
      "name": "Doctor"
    },
    {
      "name": "Patient"
    }
  ],
  "paths": {
    "/users":{
      "post": {
        "tags": ["User and Authentication Operations"],
        "summary": "Create a new user.",
        "description": "Create a new user with JsonWebToken with name, email, telefone and a password. The email should be unique for each user.",
        "operationId": "postUser",
        "requestBody": {
          "content": {
            "application-json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "telefone": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "User Name",
	                "password": "mySuperSecretPassword",
	                "email": "user@email.com",
	                "telefone": "12345678"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Users successufully created."
          },
          "400": {
            "description": "The email is already in use.",
            "content": {
              "application-json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "This email is already in use."
                }
              }
            }
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["User and Authentication Operations"],
        "summary": "Update user profile image.",
        "description": "Update the user profile image given a image path throught a multipart form input.",
        "security": {
          "bearerAuth": []
        },
        "operationId": "pathUserProfileImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "description": "Path to image file."
                  }
                },
                "example": {
                  "avatar": "/home/user/documents/image.png"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Image successfully updated."
          },
          "401": {
            "description": "The given token is invalid.",
            "content": {
              "application-json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid token."
                  }
                }
            
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["User and Authentication Operations"],
        "summary": "Authenticate user.",
        "description": "Authenticate the user with email and password. It should return a token that would be used thought the application.",
        "operationId": "authUser",
        "requestBody": {
          "content": {
            "application-json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
	                "email": "user@email.com",
	                "password": "mySuperSecretPassword"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users successufully authorized.",
            "content": {
              "application-json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MjQwMjMwNTQsImV4cCI6MTYyNDEwOTQ1NCwic3ViIjoiZDhmZTRkODEtODM0OC00Njc2LWE2ZDQtODBmNjAzMzRjNTNiIn0.aKJvpYfJ2gxZQ1zXzel47oUDfGbmNz7TjSw_60KPozM",
                  "user": {
                    "id": "d8fe4d81-8348-4676-a6d4-80f60334c53b",
                    "name": "Joao Marcelo",
                    "email": "joao2@gmail.com"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email or password incorrect.",
            "content": {
              "application-json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Email or password incorrect!"
                }
              }
            }
          }
        }
      }
    },
    "/doctors": {
      "post": {
        "tags": ["Doctor"],
        "summary": "Create a doctor account.",
        "description": "Creates a new doctor account and bind it with a user account by its ID. To create a doctor is also necessary a valid CRM number, the clinic adress, an available agenda, a profile background and the category ID.",
        "operationId": "createDoctor",
        "requestBody": {
          "content": {
            "application-json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "desctiption": "The user account id to related with the new doctor profile."
                  },
                  "crm": {
                    "type": "number",
                    "description": "The CRM number is a register information that is used to valid a doctor in all national territory. Every state has its own number format, so the ConsultaCRM API (https://www.consultacrm.com.br/index/api) is used to verify if the given number really exists."
                  },
                  "clinicAdress": {
                    "type": "string",
                    "description": "This information is use to give the patient some idea of where the doctor can be found in case of a schedule meeting."
                  },
                  "availableAgenda": {
                    "type": "string",
                    "description": "This information is use to give the patient some idea of when the doctor will be available to awnser the messages."
                  },
                  "bio": {
                    "type": "string",
                    "description": "This information should summarize the doctor background, telling the pacient some experiences, specializations in the area and other relevant informations."
                  },
                  "category_id": {
                    "type": "string",
                    "description": "The category is the doctor speciality (cardiologist, neurologist, etc...) an every doctor should be related to only one of then. "
                  }
                },
                "example": {
                  "user_id": "d8fe4d81-8348-4676-a6d4-80f60334c53b",
                  "crm": 123456789,
                  "clinicAdress": "St. A, 123",
                  "availableAgenda": "Mon. 18:00 - 20:00",
                  "bio": "Doctor's Background",
                  "category_id": "d8fe445v1-8348-4676-a6d4-80y60334c53b"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Doctor successfully created."
          }
        }
      }
    }
  }
}
